from typing import List
from collections import defaultdict

class Solution:
    def tupleSameProduct(self, nums: List[int]) -> int:
        n = len(nums)
        if n < 4:
            return 0
        d = defaultdict(int)
        for i in range(n):
            
            for j in range(i+1, n):
                
                d[nums[i] * nums[j]] += 1


        res = 0
        # print(dict.__repr__(d))
        for v in d.values():
            #count combinations of pairs
            #cases where v < 2 are handled because of v-1 evaluating to 0
            res += (v*(v - 1) / 2) * 8
        return int(res)
    
sol = Solution()
nums = [2,3,4,6]
print(sol.tupleSameProduct(nums)) # 8
nums = [1, 2, 3, 4, 6, 12]
print(sol.tupleSameProduct(nums)) # 40
